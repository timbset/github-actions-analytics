name: Upload file to maven
 
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true
        type: string
 
jobs:
  upload:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Create test VSIX
        run: |
          echo "Test VSIX content - $(date)" > test-extension-${{ inputs.logLevel }}.vsix
      - name: Unpublish version if exits
        shell: pwsh
        run: |
          $token = "${{ secrets.GITHUB_TOKEN }}"
          $baseUrl = "https://api.github.com"
          $headers = @{
              "Authorization" = "Bearer $token"
              "Accept"        = "application/vnd.github+json"
          }
          $scopeType = "users" # or "orgs"
          $owner = "${{ github.repository_owner }}"

          try {
              $versionsUrl = "$baseUrl/$scopeType/$owner/packages/maven/test-extension/versions"
              $versions = Invoke-RestMethod -Uri $versionsUrl -Headers $headers -ErrorAction Stop

              Write-Host $versions
          
              $versionObj = $versions | Where-Object { $_.name -eq "${{ inputs.logLevel }}" }
          
              if ($versionObj) {
                  $versionId = $versionObj.id
                  Write-Host "‚ö†Ô∏è  Found existing version ID $versionId ‚Äî deleting..."
                  $deleteUrl = "$baseUrl/$scopeType/$owner/packages/maven/test-extension/versions/$versionId"
          
                  Invoke-RestMethod -Uri $deleteUrl -Method DELETE -Headers $headers -ErrorAction Stop
                  Write-Host "üóëÔ∏è  Deleted version $Version successfully."
              } else {
                  Write-Host "‚úÖ No existing version $Version found ‚Äî safe to upload."
              }
          } catch {
              Write-Host "‚ùå Failed to check or delete old version:" -ForegroundColor Red
              Write-Host $_.Exception.Message
              if ($_.ErrorDetails.Message) { Write-Host $_.ErrorDetails.Message }
              exit 1
          }
      - name: Upload to GitHub Packages
        shell: pwsh
        run: |
          $token = "${{ secrets.GITHUB_TOKEN }}"
          $repo = "${{ github.repository }}"
          $file = "test-extension-${{ inputs.logLevel }}.vsix"
          $url = "https://maven.pkg.github.com/$repo/test-extension/${{ inputs.logLevel }}/$file"

          try {
            $response = Invoke-RestMethod `
              -Uri $url `
              -Method Put `
              -Headers @{
                "Authorization" = "Bearer $token"
                "Content-Type"  = "application/octet-stream"
              } `
              -InFile $file `
              -ErrorAction Stop

            Write-Host "‚úÖ Successfully uploaded to GitHub Packages!"
          } catch {
            Write-Host "‚ùå Upload failed:"
            Write-Host $_.Exception.Message
            if ($_.ErrorDetails.Message) { Write-Host $_.ErrorDetails.Message }
            exit 1
          }
      - name: Verify upload
        run: |
          echo "‚úÖ Package uploaded!"
          echo "View at: https://github.com/${{ github.repository_owner }}?tab=packages"
